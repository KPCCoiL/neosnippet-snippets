snippet     warshalFloyd
abbr        for()for()for()d[][]=min()
options     head
        for(int k = 0; k < ${1:Vertex}; k++)
                for(int i = 0; i < $1; i++)
                        for(int j = 0; j < $1; j++)
                                ${2:Distance}[i][j] = min($2[i][j],$2[i][k]+$2[k][j]);
        ${0}
        
snippet     bfs
abbr        while(!q.empty()){}
options     head
        queue<${1:type}> ${2:Queue};
        while(!$2.empty()) {
                auto new = $2.front(); $2.pop();
                ${0:body}
        }

snippet     unionFind
abbr        class union_find{}
options     head
        class union_find {
                vector<int> rank, par;
                public:
                        union_find(int n) {
                                rank.resize(n);
                                par.resize(n);
                                for (int i = 0; i < n; i++) {
                                        rank[i] = 1;
                                        par[i] = i;
                                }
                        }
                        int find(int x) {
                                if(par[x] == x) return x;
                                return par[x] = find(par[x]);
                        }
                        void unite(int x, int y) {
                                x = find(x);
                                y = find(y);
                                if(rank[x] < rank[y]) par[x] = y;
                                else {
                                        par[y] = x;
                                        if(rank[x] == rank[y])
                                                rank[x]++;
                                }
                        }
                        bool same(int x, int y) { return find(x) == find(y); }
        };
